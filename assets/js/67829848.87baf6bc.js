"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[906],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(n),u=o,y=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return n?a.createElement(y,s(s({ref:t},d),{},{components:n})):a.createElement(y,s({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={title:"Delete",date:"2022-09-05 06:00:00 +0000",displayed_sidebar:"aws",sidebar_position:6},s="Delete toodos",i={unversionedId:"aws-sam/todo-app/delete-todo",id:"aws-sam/todo-app/delete-todo",title:"Delete",description:"Delete a todo is very simple. We just have to pass the TableName and Key as the parameters to the docClient.delete(params) method. Let's add a deleteTodo function.",source:"@site/docs/aws-sam/03-todo-app/delete-todo.mdx",sourceDirName:"aws-sam/03-todo-app",slug:"/aws-sam/todo-app/delete-todo",permalink:"/tutorials/aws-sam/todo-app/delete-todo",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Delete",date:"2022-09-05 06:00:00 +0000",displayed_sidebar:"aws",sidebar_position:6},sidebar:"aws",previous:{title:"Update",permalink:"/tutorials/aws-sam/todo-app/update-todo"},next:{title:"Lambda layers",permalink:"/tutorials/aws-sam/lambda-layers"}},l={},p=[{value:"Api gateway handler",id:"api-gateway-handler",level:2},{value:"Sam template configuration",id:"sam-template-configuration",level:2},{value:"Test",id:"test",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"delete-toodos"},"Delete toodos"),(0,o.kt)("p",null,"Delete a todo is very simple. We just have to pass the ",(0,o.kt)("strong",{parentName:"p"},"TableName")," and ",(0,o.kt)("strong",{parentName:"p"},"Key")," as the parameters to the ",(0,o.kt)("inlineCode",{parentName:"p"},"docClient.delete(params)")," method. Let's add a ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteTodo")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},"const deleteTodo = async (id: string) => {\n  const params: DocumentClient.DeleteItemInput = {\n    TableName: tableName,\n    Key: { id }\n  }\n\n  return docClient.delete(params).promise();\n}\n")),(0,o.kt)("h2",{id:"api-gateway-handler"},"Api gateway handler"),(0,o.kt)("p",null,"Now add an API gateway handler ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteTodoHandler")," for our ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteTodo")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"showLineNumbers",showLineNumbers:!0},"export const deleteTodoHandler = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n  console.log(\"patchTodoHandler\", event);\n  let response: APIGatewayProxyResult;\n  try {\n    const deleteResult = await deleteTodo(event.pathParameters?.id || '');\n    response = jsonResponse(200, deleteResult);\n  } catch (err) {\n    console.log(err);\n    response = {\n      statusCode: 500,\n      body: JSON.stringify({\n        message: 'some error happened',\n      }),\n    };\n  }\n  return response;\n};\n")),(0,o.kt)("p",null,"We are extraction the ",(0,o.kt)("strong",{parentName:"p"},"id")," of todo from ",(0,o.kt)("inlineCode",{parentName:"p"},"event.pathParameters?.id")," and passing it to ",(0,o.kt)("inlineCode",{parentName:"p"},"deleteTodo")," function for deleting our todo."),(0,o.kt)("h2",{id:"sam-template-configuration"},"Sam template configuration"),(0,o.kt)("p",null,"Add below lines of code in `templat.yaml`` file under ",(0,o.kt)("strong",{parentName:"p"},"Resources")," section."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"showLineNumbers",showLineNumbers:!0},"DeleteTodoByIdFunction:\n  Type: AWS::Serverless::Function\n  Properties:\n    CodeUri: dist/\n    Handler: app.deleteTodoHandler\n    Policies:\n      - DynamoDBCrudPolicy:\n          TableName: !Ref TodoTable\n    Environment:\n      Variables:\n        TODO_TABLE: !Ref TodoTable\n    Events:\n      UpdateTodo:\n        Type: Api\n        Properties:\n          Path: /todos/{id}\n          Method: DELETE\n")),(0,o.kt)("p",null,"Here we are adding an api event with ",(0,o.kt)("strong",{parentName:"p"},"DELETE")," http method to our function resource."),(0,o.kt)("h2",{id:"test"},"Test"),(0,o.kt)("p",null,"Build and deploy your application. You will see our lambda functions are being created. After the deployment is completed, you can delete any todos by calling the HTTP ",(0,o.kt)("strong",{parentName:"p"},"DELETE")," method and passing ",(0,o.kt)("strong",{parentName:"p"},"id")," as the path parameter and check if the application is working as expected or not."),(0,o.kt)("admonition",{title:"Tip",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"A complete implementation of this todo app can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/VinitTomar/todo-aws-sam"},"here"),". This repository code is restructured and some things might be different from our tutorial.")))}m.isMDXComponent=!0}}]);